{"bin": {"text": "173860", "total": "321568", "data": "20", "bss": "265576", "rodata": "72260"}, "date": "2017-05-15T21:49:02Z", "tests": [{"output": "uncaughtException: AssertionError: {\"actual\":1,\"expected\":2,\"operator\":\"==\"}", "name": "test_assert_equal.js", "result": "pass"}, {"output": "uncaughtException: AssertionError: {}", "name": "test_assert_fail.js", "result": "pass"}, {"output": "uncaughtException: AssertionError: {\"actual\":1,\"expected\":1,\"operator\":\"!=\"}", "name": "test_assert_notequal.js", "result": "pass"}, {"output": "uncaughtException: Error: Uncaught 'error' event", "name": "test_events_uncaught_error.js", "result": "pass"}, {"reason": "test is in read-only memory space", "name": "test_fs_callbacks_called.js", "result": "skip"}, {"output": "uncaughtException: TypeError", "name": "test_iotjs_runtime_error.js", "result": "pass"}, {"output": "uncaughtException: SyntaxError", "name": "test_iotjs_syntax_error.js", "result": "pass"}, {"output": "uncaughtException: Error: Module not found: no exist file path", "name": "test_module_require_invalid_file.js", "result": "pass"}, {"output": "uncaughtException: AssertionError: {}", "name": "test_process_exitcode_arg.js", "result": "pass"}, {"output": "uncaughtException: AssertionError: {}", "name": "test_process_exitcode_var.js", "result": "pass"}, {"output": "uncaughtException: AssertionError: {}", "name": "test_process_explicit_exit.js", "result": "pass"}, {"output": "", "name": "test_process_implicit_exit.js", "result": "pass"}, {"reason": "need to setup test environment", "name": "test_adc.js", "result": "skip"}, {"output": "", "name": "test_assert.js", "result": "pass"}, {"reason": "need to setup test environment", "name": "test_ble_advertisement.js", "result": "skip"}, {"reason": "need to setup test environment", "name": "test_ble_setservices.js", "result": "skip"}, {"output": "", "name": "test_buffer_builtin.js", "result": "pass"}, {"output": "", "name": "test_buffer.js", "result": "pass"}, {"output": "Hello IoT.js!!\n\r1\n\r2\n\r3\n\r13\n\r1,2,3\n\r1 2 3\n\ra 1 b 2 c 3\n\rtest null undefined\n\rHello IoT.js!!\n\r1\n\r2\n\r3\n\r13\n\r1,2,3\n\r1 2 3\n\ra 1 b 2 c 3", "name": "test_console.js", "result": "pass"}, {"reason": "need to setup test environment", "name": "test_dgram_1_server_1_client.js", "result": "skip"}, {"reason": "need to setup test environment", "name": "test_dgram_1_server_n_clients.js", "result": "skip"}, {"reason": "need to setup test environment", "name": "test_dgram_address.js", "result": "skip"}, {"reason": "need to setup test environment", "name": "test_dgram_broadcast.js", "result": "skip"}, {"reason": "need to setup test environment", "name": "test_dgram_multicast_membership.js", "result": "skip"}, {"reason": "need to setup test environment", "name": "test_dgram_multicast_set_multicast_loop.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_dns.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_dns_lookup.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_events.js", "result": "skip"}, {"output": "", "name": "test_events_emit_error.js", "result": "pass"}, {"output": "", "name": "test_events_uncaught_error.js", "result": "pass"}, {"reason": "not implemented for nuttx", "name": "test_fs_exists.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_fs_exists_sync.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_fs_mkdir_rmdir.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_fs_open_close.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_fs_readdir.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_fs_readfile.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_fs_readfile_sync.js", "result": "skip"}, {"reason": "test is in read-only memory space", "name": "test_fs_rename.js", "result": "skip"}, {"reason": "test is in read-only memory space", "name": "test_fs_rename_sync.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_fs_stat.js", "result": "skip"}, {"reason": "test is in read-only memory space", "name": "test_fs_writefile_unlink.js", "result": "skip"}, {"reason": "test is in read-only memory space", "name": "test_fs_writefile_unlink_sync.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_fs_event.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_fs_open_read.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_fs_open_read_sync_1.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_fs_open_read_sync_2.js", "result": "skip"}, {"reason": "needs hardware", "name": "test_gpio_input.js", "result": "skip"}, {"reason": "need user input", "name": "test_gpio_output.js", "result": "skip"}, {"reason": "need to setup test environment", "name": "test_i2c.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_module_cache.js", "result": "skip"}, {"output": "", "name": "test_net_1.js", "result": "pass"}, {"output": "", "name": "test_net_2.js", "result": "pass"}, {"reason": "requires too many socket descriptors and too large buffers", "name": "test_net_3.js", "result": "skip"}, {"output": "", "name": "test_net_4.js", "result": "pass"}, {"output": "", "name": "test_net_5.js", "result": "pass"}, {"output": "", "name": "test_net_6.js", "result": "pass"}, {"reason": "requires too many socket descriptors", "name": "test_net_7.js", "result": "skip"}, {"output": "", "name": "test_net_8.js", "result": "pass"}, {"output": "", "name": "test_net_9.js", "result": "pass"}, {"output": "AssertionError: {\"actual\":false,\"expected\":true,\"operator\":\"==\"}", "name": "test_net_10.js", "result": "fail"}, {"reason": "not implemented for nuttx", "name": "test_net_headers.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_net_http_get.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_net_http_response_twice.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_net_http_status_codes.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_net_httpclient_timeout_1.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_net_httpclient_timeout_2.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_net_httpserver_timeout.js", "result": "skip"}, {"reason": "not implemented for nuttx", "name": "test_net_httpserver.js", "result": "skip"}, {"output": "", "name": "test_process.js", "result": "pass"}, {"reason": "this test had @STDOUT=COMMAND[pwd], but there's no way to check out current directory path with js driver. So it skips temporarily.", "name": "test_process_cwd.js", "result": "skip"}, {"reason": "driver can not run with test which checks out process.exit events", "name": "test_process_exit.js", "result": "skip"}, {"output": "", "name": "test_process_experimental_off.js", "result": "pass"}, {"reason": "needed if testing stablity is set with experimental", "name": "test_process_experimental_on.js", "result": "skip"}, {"output": "", "name": "test_process_next_tick.js", "result": "pass"}, {"output": "", "name": "test_process_uncaught_order.js", "result": "pass"}, {"output": "", "name": "test_process_uncaught_simple.js", "result": "pass"}, {"reason": "need to setup test environment", "name": "test_pwm.js", "result": "skip"}, {"reason": "need to setup test environment", "name": "test_spi.js", "result": "skip"}, {"reason": "dynamically changing result", "name": "test_stat.js", "result": "skip"}, {"output": "", "name": "test_stream.js", "result": "pass"}, {"output": "", "name": "test_stream_duplex.js", "result": "pass"}, {"output": "", "name": "test_timers_arguments.js", "result": "pass"}, {"output": "", "name": "test_timers_error.js", "result": "pass"}, {"output": "", "name": "test_timers_simple.js", "result": "pass"}, {"reason": "need to setup test environment", "name": "test_uart.js", "result": "skip"}, {"output": "", "name": "test_util.js", "result": "pass"}, {"output": "", "name": "issue-133.js", "result": "pass"}, {"output": "hello world\n\r1\n\r19\n\rnull\n\rtrue\n\rfalse\n\rundefined\n\r0.09\n\rNaN\n\rfunction(){/* ecmascript */}\n\rfunction(){/* ecmascript */}\n\r[object Object]\n\r[object Object]\n\r\n\r1,2,3\n\r1+10=11\n\r2+10=12\n\r3+10=13\n\r4+10=14\n\r5+10=15", "name": "issue-137.js", "result": "pass"}, {"output": "", "name": "issue-198.js", "result": "pass"}, {"output": "", "name": "issue-223.js", "result": "pass"}, {"output": "", "name": "issue-266.js", "result": "pass"}, {"output": "", "name": "issue-323.js", "result": "pass"}], "submodules": {"iotjs": {"date": "Mon May 15 12:16:32 2017 +0200", "commit": "5ad0d7ef54c6fc6b23d82116923ae099bdacd619", "message": "[Code coverage] Improve the coverage of stream_readable.js (#838)", "author": "Imre Kiss <kissi@inf.u-szeged.hu>"}, "nuttx": {"date": "Mon Dec 26 13:46:34 2016 -0600", "commit": "02146758ef15b4120ab76fc9c7b54a1a0defd6d8", "message": "Update Documentation as prep for NuttX-7.19 release.", "author": "Gregory Nutt <gnutt@nuttx.org>"}, "apps": {"date": "Mon Dec 26 12:39:26 2016 -0600", "commit": "5291d3e9bcdb7b1a92e0682e6e2d5754e9ba08f9", "message": "Update ChangeLog", "author": "Gregory Nutt <gnutt@nuttx.org>"}}}
